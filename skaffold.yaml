# Main Skaffold configuration with split app and KCC modules
# This configuration splits app and KCC resources to avoid Skaffold bug #7207
# where Config Connector status checking fails when using dual tracking mode

# Default configuration - selects appropriate modules based on profile
apiVersion: skaffold/v4beta13
kind: Config
profiles:
- name: dev
  # Dummy profile to ensure dev modules are selected
- name: qa  
  # Dummy profile to ensure qa modules are selected
- name: prod
  # Dummy profile to ensure prod modules are selected  
- name: preview
  # Dummy profile to ensure preview modules are selected

# Namespace configurations
---
apiVersion: skaffold/v4beta13
kind: Config
metadata:
  name: webapp-namespace-nonprod
# Namespace module - creates namespace for non-prod environments
manifests:
  rawYaml:
  - k8s-clean/namespace/namespace-nonprod.yaml
deploy:
  kubectl:
    flags:
      apply: ["--server-side", "--force-conflicts"]
profiles:
- name: dev
- name: qa

---
apiVersion: skaffold/v4beta13
kind: Config
metadata:
  name: webapp-namespace-prod
# Namespace module - creates namespace for prod environment
manifests:
  rawYaml:
  - k8s-clean/namespace/namespace-prod.yaml
deploy:
  kubectl:
    flags:
      apply: ["--server-side", "--force-conflicts"]
profiles:
- name: prod

---
apiVersion: skaffold/v4beta13
kind: Config
metadata:
  name: webapp-namespace-preview
# Namespace module for preview - creates namespace dynamically
manifests:
  kustomize:
    paths:
    - k8s-clean/overlays/preview-gateway
    buildArgs:
    - --load-restrictor=LoadRestrictionsNone
patches:
- op: select
  path: metadata.name
  value: webapp-*
  target:
    kind: Namespace
deploy:
  kubectl:
    flags:
      apply: ["--server-side", "--force-conflicts"]
profiles:
- name: preview

# Dev environment configurations
---
apiVersion: skaffold/v4beta13
kind: Config
metadata:
  name: webapp-dev-app
# Application module - deployments, services with status checking enabled
build:
  artifacts:
  - image: europe-west1-docker.pkg.dev/u2i-tenant-webapp-nonprod/webapp-images/webapp
manifests:
  kustomize:
    paths:
    - k8s-clean/overlays/dev-gateway
    buildArgs:
    - --load-restrictor=LoadRestrictionsNone
deploy:
  kubectl:
    flags:
      apply: ["--server-side", "--force-conflicts"]
  statusCheck: true  # Enable status checking for app resources
profiles:
- name: dev

---
apiVersion: skaffold/v4beta13
kind: Config
metadata:
  name: webapp-dev-kcc
# KCC module - Config Connector resources with status checking disabled
manifests:
  kustomize:
    paths:
    - k8s-clean/kcc/overlays/dev-gateway
    buildArgs:
    - --load-restrictor=LoadRestrictionsNone
deploy:
  kubectl:
    flags:
      apply: ["--server-side", "--force-conflicts"]
  statusCheck: false  # Disable status checking for KCC resources to avoid bug #7207
profiles:
- name: dev

# QA environment configurations
---
apiVersion: skaffold/v4beta13
kind: Config
metadata:
  name: webapp-qa-app
# Application module - deployments, services with status checking enabled
build:
  artifacts:
  - image: europe-west1-docker.pkg.dev/u2i-tenant-webapp-nonprod/webapp-images/webapp
manifests:
  kustomize:
    paths:
    - k8s-clean/overlays/qa-gateway
    buildArgs:
    - --load-restrictor=LoadRestrictionsNone
deploy:
  kubectl:
    flags:
      apply: ["--server-side", "--force-conflicts"]
  statusCheck: true  # Enable status checking for app resources
profiles:
- name: qa

---
apiVersion: skaffold/v4beta13
kind: Config
metadata:
  name: webapp-qa-kcc
# KCC module - Config Connector resources with status checking disabled
manifests:
  kustomize:
    paths:
    - k8s-clean/kcc/overlays/qa-gateway
    buildArgs:
    - --load-restrictor=LoadRestrictionsNone
deploy:
  kubectl:
    flags:
      apply: ["--server-side", "--force-conflicts"]
  statusCheck: false  # Disable status checking for KCC resources to avoid bug #7207
profiles:
- name: qa

# Production environment configurations
---
apiVersion: skaffold/v4beta13
kind: Config
metadata:
  name: webapp-prod-app
# Application module - deployments, services, PDB with status checking enabled
build:
  artifacts:
  - image: europe-west1-docker.pkg.dev/u2i-tenant-webapp-prod/webapp-images/webapp
manifests:
  kustomize:
    paths:
    - k8s-clean/overlays/production-gateway
    buildArgs:
    - --load-restrictor=LoadRestrictionsNone
deploy:
  kubectl:
    flags:
      apply: ["--server-side", "--force-conflicts"]
  statusCheck: true  # Enable status checking for app resources
profiles:
- name: prod

---
apiVersion: skaffold/v4beta13
kind: Config
metadata:
  name: webapp-prod-kcc
# KCC module - Config Connector resources with status checking disabled
manifests:
  kustomize:
    paths:
    - k8s-clean/kcc/overlays/production-gateway
    buildArgs:
    - --load-restrictor=LoadRestrictionsNone
deploy:
  kubectl:
    flags:
      apply: ["--server-side", "--force-conflicts"]
  statusCheck: false  # Disable status checking for KCC resources to avoid bug #7207
profiles:
- name: prod

# Preview environment configurations
---
apiVersion: skaffold/v4beta13
kind: Config
metadata:
  name: webapp-preview-app
# Application module - deployments, services with status checking enabled
build:
  artifacts:
  - image: europe-west1-docker.pkg.dev/u2i-tenant-webapp-nonprod/webapp-images/webapp
manifests:
  kustomize:
    paths:
    - k8s-clean/overlays/preview-gateway
    buildArgs:
    - --load-restrictor=LoadRestrictionsNone
deploy:
  kubectl:
    flags:
      apply: ["--server-side", "--force-conflicts"]
  statusCheck: true  # Enable status checking for app resources
profiles:
- name: preview

---
apiVersion: skaffold/v4beta13
kind: Config
metadata:
  name: webapp-preview-kcc
# KCC module - Config Connector resources with status checking disabled
manifests:
  kustomize:
    paths:
    - k8s-clean/kcc/overlays/preview-gateway
    buildArgs:
    - --load-restrictor=LoadRestrictionsNone
deploy:
  kubectl:
    flags:
      apply: ["--server-side", "--force-conflicts"]
  statusCheck: false  # Disable status checking for KCC resources to avoid bug #7207
profiles:
- name: preview