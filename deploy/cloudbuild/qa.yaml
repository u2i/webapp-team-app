steps:
# Build the Docker image
- name: 'gcr.io/cloud-builders/docker'
  id: 'build-image'
  args: [
    'build',
    '-t', '${_REGION}-docker.pkg.dev/${_PROJECT_ID}/webapp-images/webapp:qa-${COMMIT_SHA}',
    '-t', '${_REGION}-docker.pkg.dev/${_PROJECT_ID}/webapp-images/webapp:qa-latest',
    '.'
  ]

# Push the Docker image
- name: 'gcr.io/cloud-builders/docker'
  id: 'push-image'
  args: ['push', '--all-tags', '${_REGION}-docker.pkg.dev/${_PROJECT_ID}/webapp-images/webapp']

# Deploy using Cloud Deploy
- name: 'google/cloud-sdk:alpine'
  id: 'deploy-qa'
  entrypoint: 'bash'
  args: ['-c', './compliance-cli deploy qa']
  env:
  - 'PROJECT_ID=${_PROJECT_ID}'
  - 'REGION=${_REGION}'
  - 'COMMIT_SHA=$COMMIT_SHA'
  - 'SHORT_SHA=$SHORT_SHA'
  - 'TAG_NAME=$TAG_NAME'

# Send Slack notification
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:alpine'
  id: 'slack-notification'
  entrypoint: 'sh'
  args:
  - '-c'
  - |
    # Update the notification script to handle QA environment
    export ENVIRONMENT="QA"
    export ENVIRONMENT_URL="https://qa.webapp.u2i.dev"
    apk add --no-cache jq
    bash scripts/slack-notification-env.sh
  env:
  - 'PROJECT_ID=${_PROJECT_ID}'
  - 'REGION=${_REGION}'
  - 'COMMIT_SHA=$COMMIT_SHA'
  - 'BUILD_ID=$BUILD_ID'

options:
  logging: CLOUD_LOGGING_ONLY
  
substitutions:
  _PROJECT_ID: u2i-tenant-webapp-nonprod
  _REGION: europe-west1