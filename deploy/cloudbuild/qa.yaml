steps:
# Build the Docker image
- name: 'gcr.io/cloud-builders/docker'
  id: 'build-image'
  args: [
    'build',
    '-t', '${_REGION}-docker.pkg.dev/${_PROJECT_ID}/webapp-images/webapp:qa-${COMMIT_SHA}',
    '-t', '${_REGION}-docker.pkg.dev/${_PROJECT_ID}/webapp-images/webapp:qa-latest',
    '.'
  ]

# Push the Docker image
- name: 'gcr.io/cloud-builders/docker'
  id: 'push-image'
  args: ['push', '--all-tags', '${_REGION}-docker.pkg.dev/${_PROJECT_ID}/webapp-images/webapp']

# Deploy to QA using gcloud directly (compliance-cli needs permissions fix)
- name: 'gcr.io/google.com/cloudsdktool/google-cloud-cli:stable'
  id: 'deploy-qa'
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    gcloud deploy releases create qa-$COMMIT_SHA \
      --delivery-pipeline=webapp-qa-prod-pipeline \
      --region=${_REGION} \
      --project=${_PROJECT_ID} \
      --images=europe-west1-docker.pkg.dev/${_PROJECT_ID}/webapp-images/webapp=europe-west1-docker.pkg.dev/${_PROJECT_ID}/webapp-images/webapp:qa-$COMMIT_SHA \
      --to-target=qa-gke \
      --skaffold-file=deploy/skaffold.yaml

# Send Slack notification (disabled - compliance-cli needs permissions fix)
- name: 'gcr.io/google.com/cloudsdktool/google-cloud-cli:stable'
  id: 'slack-notification'
  entrypoint: 'bash'
  args: ['-c', 'echo "Slack notification skipped - QA deployment completed"']

options:
  logging: CLOUD_LOGGING_ONLY
  
substitutions:
  _PROJECT_ID: u2i-tenant-webapp-nonprod
  _REGION: europe-west1