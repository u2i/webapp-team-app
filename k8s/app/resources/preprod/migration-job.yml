apiVersion: batch/v1
kind: Job
metadata:
  name: webapp-migration
  namespace: webapp-dev # from-param: ${NAMESPACE}
  labels:
    app: webapp
    component: migration
spec:
  ttlSecondsAfterFinished: 3600 # Clean up after 1 hour
  backoffLimit: 3
  template:
    metadata:
      labels:
        app: webapp
        component: migration
    spec:
      serviceAccountName: webapp
      automountServiceAccountToken: true
      restartPolicy: Never
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 2000
      initContainers:
      # Fetch AlloyDB instance URI from Secret Manager
      - name: fetch-instance-uri
        image: gcr.io/google.com/cloudsdktool/cloud-sdk:alpine
        command:
        - /bin/sh
        - -c
        - |
          echo "Fetching AlloyDB instance URI from Secret Manager..."
          
          # Fetch secret using gcloud with Workload Identity
          SECRET_NAME="webapp-nonprod-alloydb-instance-uri"
          PROJECT_ID="u2i-tenant-webapp-nonprod"
          
          echo "Fetching secret: $SECRET_NAME from project $PROJECT_ID"
          
          # Use gcloud to access the secret (will use Workload Identity automatically)
          gcloud secrets versions access latest \
            --secret="$SECRET_NAME" \
            --project="$PROJECT_ID" > /shared/instance-uri
          
          if [ -s /shared/instance-uri ]; then
            echo "Instance URI fetched successfully:"
            cat /shared/instance-uri
          else
            echo "Failed to fetch instance URI"
            exit 1
          fi
        volumeMounts:
        - name: shared-data
          mountPath: /shared
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 1000
          capabilities:
            drop:
            - ALL
      containers:
      # AlloyDB Auth Proxy sidecar with IAM authentication
      - name: alloydb-auth-proxy
        image: gcr.io/alloydb-connectors/alloydb-auth-proxy:latest
        command:
        - /bin/sh
        - -c
        - |
          INSTANCE_URI=$(cat /shared/instance-uri)
          echo "Starting AlloyDB Auth Proxy for instance: $INSTANCE_URI"
          /alloydb-auth-proxy \
            --port=5432 \
            --instances="$INSTANCE_URI=tcp:5432" \
            --max-connections=10 \
            --private-ip \
            --auto-iam-authn
        volumeMounts:
        - name: shared-data
          mountPath: /shared
        securityContext:
          runAsNonRoot: true
          runAsUser: 2000
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        resources:
          requests:
            memory: "32Mi"
            cpu: "10m"
          limits:
            memory: "64Mi"
            cpu: "100m"
      - name: migrate
        image: europe-west1-docker.pkg.dev/u2i-tenant-webapp-nonprod/webapp-images/webapp
        command: ["node", "migrate.js"]
        env:
        - name: PROJECT_ID
          value: "u2i-tenant-webapp-nonprod" # from-param: ${PROJECT_ID}
        - name: BOUNDARY
          value: "nonprod" # from-param: ${BOUNDARY}
        - name: STAGE
          value: "dev" # from-param: ${STAGE}
        - name: ALLOYDB_AUTH_PROXY
          value: "true"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
      volumes:
      - name: shared-data
        emptyDir: {}