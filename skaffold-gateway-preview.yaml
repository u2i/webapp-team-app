apiVersion: skaffold/v4beta13
kind: Config
metadata:
  name: webapp-preview-deployment
build:
  artifacts:
  - image: europe-west1-docker.pkg.dev/u2i-tenant-webapp/webapp-images/webapp
    docker:
      dockerfile: Dockerfile
  googleCloudBuild:
    projectId: u2i-tenant-webapp
    region: europe-west1
  tagPolicy:
    sha256: {}
manifests:
  kustomize:
    paths:
    - k8s-clean/overlays/preview-gateway
    buildArgs:
    - --load-restrictor=LoadRestrictionsNone
deploy:
  kubectl:
    flags:
      apply: ["--wait=true", "--server-side", "--timeout=600s"]
      global: ["--request-timeout=600s"]
  statusCheckDeadlineSeconds: 1200
customActions:
- name: setup-cert-and-infra
  containers:
  - name: kubectl-setup
    image: gcr.io/google.com/cloudsdktool/google-cloud-cli:alpine
    command: ["/bin/sh"]
    args:
    - -c
    - |
      set -e
      echo "=== Starting setup for certificate and infrastructure ==="
      
      # List available directories to debug
      echo "Current directory: $(pwd)"
      echo "Directory contents:"
      ls -la
      
      # Check if skaffold mounted the source
      if [ -d "/skaffold" ]; then
        cd /skaffold
      elif [ -d "/source" ]; then
        cd /source
      else
        echo "Source directory not found, staying in current directory"
      fi
      
      echo "Working directory: $(pwd)"
      echo "Contents:"
      ls -la
      
      # Configure kubectl
      gcloud container clusters get-credentials webapp-cluster \
        --region=europe-west1 \
        --project=u2i-tenant-webapp
      
      echo "1. Creating namespace..."
      kubectl apply -f k8s-clean/overlays/preview-gateway-cert/namespace.yaml \
        --server-side
      
      echo "2. Applying certificate resources..."
      kubectl apply -k k8s-clean/overlays/preview-gateway-cert \
        --wait=true --server-side --timeout=600s
      
      echo "3. Waiting for certificate to become ACTIVE..."
      kubectl wait \
        --for=jsonpath='{.status.state}'=ACTIVE \
        --timeout=10m \
        -n ${NAMESPACE} \
        certificatemanagercertificates/${CERT_NAME}
      
      echo "Certificate is ACTIVE!"
      
      echo "4. Applying infrastructure resources..."
      kubectl apply -k k8s-clean/overlays/preview-gateway-infra \
        --wait=true --server-side --timeout=300s
      
      echo "=== Setup completed successfully ==="
profiles:
# Single profile - app deployment only (cert and infra handled by custom action)
- name: preview-all
  manifests:
    kustomize:
      paths:
      # Only the application deployment - cert and infra are handled by custom action
      - k8s-clean/overlays/preview-gateway
      buildArgs:
      - --load-restrictor=LoadRestrictionsNone