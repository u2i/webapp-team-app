apiVersion: skaffold/v4beta13
kind: Config
metadata:
  name: webapp-preview-deployment
build:
  artifacts:
  - image: europe-west1-docker.pkg.dev/u2i-tenant-webapp/webapp-images/webapp
    docker:
      dockerfile: Dockerfile
  googleCloudBuild:
    projectId: u2i-tenant-webapp
    region: europe-west1
  tagPolicy:
    sha256: {}
manifests:
  kustomize:
    paths:
    - k8s-clean/overlays/preview-gateway
    buildArgs:
    - --load-restrictor=LoadRestrictionsNone
deploy:
  kubectl:
    flags:
      apply: ["--wait=true", "--server-side", "--timeout=600s"]
      global: ["--request-timeout=600s"]
  statusCheckDeadlineSeconds: 1200
customActions:
- name: setup-cert-and-infra
  containers:
  - name: kubectl-setup
    image: gcr.io/cloud-builders/kubectl
    command: ["/bin/bash"]
    args:
    - -c
    - |
      set -ex
      echo "=== Starting setup for certificate and infrastructure ==="
      
      # The gcr.io/cloud-builders/kubectl image has kubectl and is authenticated
      echo "1. Creating namespace..."
      kubectl apply -f - --server-side <<EOF
apiVersion: v1
kind: Namespace
metadata:
  name: ${NAMESPACE}
  labels:
    purpose: preview
    preview-name: ${PREVIEW_NAME}
EOF
      
      echo "2. Creating certificate resources..."
      kubectl apply -f - --server-side <<EOF
apiVersion: certificatemanager.cnrm.cloud.google.com/v1beta1
kind: CertificateManagerCertificate
metadata:
  name: ${CERT_NAME}
  namespace: ${NAMESPACE}
  annotations:
    cnrm.cloud.google.com/project-id: u2i-tenant-webapp
spec:
  projectRef:
    external: u2i-tenant-webapp
  location: global
  description: ${CERT_DESCRIPTION}
  managed:
    domains:
    - ${DOMAIN}
---
apiVersion: certificatemanager.cnrm.cloud.google.com/v1beta1
kind: CertificateManagerCertificateMapEntry  
metadata:
  name: ${CERT_ENTRY_NAME}
  namespace: ${NAMESPACE}
  annotations:
    cnrm.cloud.google.com/project-id: u2i-tenant-webapp
spec:
  projectRef:
    external: u2i-tenant-webapp
  mapRef:
    name: webapp-cert-map
    namespace: infra-gw
  certificatesRefs:
  - name: ${CERT_NAME}
  hostname: ${DOMAIN}
EOF
      
      echo "3. Waiting for certificate to become ACTIVE..."
      kubectl wait \
        --for=jsonpath='{.status.state}'=ACTIVE \
        --timeout=10m \
        -n ${NAMESPACE} \
        certificatemanagercertificates/${CERT_NAME}
      
      echo "Certificate is ACTIVE!"
      
      echo "=== Setup completed successfully ==="
profiles:
# Single profile - app deployment only (cert and infra handled by custom action)
- name: preview-all
  manifests:
    kustomize:
      paths:
      # Only the application deployment - cert and infra are handled by custom action
      - k8s-clean/overlays/preview-gateway
      buildArgs:
      - --load-restrictor=LoadRestrictionsNone