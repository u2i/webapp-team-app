apiVersion: skaffold/v4beta13
kind: Config
metadata:
  name: webapp-preview-deployment
build:
  artifacts:
  - image: europe-west1-docker.pkg.dev/u2i-tenant-webapp/webapp-images/webapp
    docker:
      dockerfile: Dockerfile
  googleCloudBuild:
    projectId: u2i-tenant-webapp
    region: europe-west1
  tagPolicy:
    sha256: {}
manifests:
  kustomize:
    paths:
    - k8s-clean/overlays/preview-gateway
    buildArgs:
    - --load-restrictor=LoadRestrictionsNone
deploy:
  kubectl:
    flags:
      apply: ["--server-side", "--force-conflicts"]
customActions:
- name: setup-namespace
  containers:
  - name: kubectl-setup
    image: gcr.io/google.com/cloudsdktool/cloud-sdk:latest
    command: ["/bin/bash"]
    args:
    - "-c"
    - |
      set -ex
      echo "=== Setting up namespace and network resources ==="
      
      # Get cluster credentials
      gcloud container clusters get-credentials webapp-cluster \
        --region=europe-west1 \
        --project=u2i-tenant-webapp
      
      # Create namespace if it doesn't exist
      echo "Creating namespace ${NAMESPACE}..."
      kubectl create namespace ${NAMESPACE} --dry-run=client -o yaml | kubectl apply -f - --server-side
      
      # Apply HTTPRoute and NetworkPolicy directly
      echo "Applying HTTPRoute..."
      kubectl apply -f - --server-side <<EOF
      apiVersion: gateway.networking.k8s.io/v1
      kind: HTTPRoute
      metadata:
        name: ${NAME_PREFIX:-preview-}webapp-route
        namespace: ${NAMESPACE}
        labels:
          app: webapp
          stage: ${STAGE}
          boundary: ${BOUNDARY}
          tier: ${TIER}
          environment: ${ENV}
        annotations:
          external-dns.alpha.kubernetes.io/hostname: "${DOMAIN}"
          external-dns.alpha.kubernetes.io/ttl: "300"
      spec:
        hostnames: 
        - "${DOMAIN}"
        parentRefs:
        - name: webapp-gateway
          namespace: infra-gw
        rules:
        - backendRefs:
          - name: ${NAME_PREFIX}webapp-service
            port: 80
      EOF
      
      echo "Applying NetworkPolicy..."
      kubectl apply -f - --server-side <<EOF
      apiVersion: networking.k8s.io/v1
      kind: NetworkPolicy
      metadata:
        name: webapp-network-policy
        namespace: ${NAMESPACE}
        labels:
          app: webapp
          stage: ${STAGE}
          boundary: ${BOUNDARY}
          tier: ${TIER}
          environment: ${ENV}
      spec:
        podSelector:
          matchLabels:
            app: webapp
        policyTypes:
        - Ingress
        - Egress
        ingress:
        - from:
          - ipBlock:
              cidr: 130.211.0.0/22
          - ipBlock:
              cidr: 35.191.0.0/16
          - ipBlock:
              cidr: 209.85.152.0/22
          - ipBlock:
              cidr: 209.85.204.0/22
          ports:
          - protocol: TCP
            port: 8080
        egress:
        - ports:
          - protocol: UDP
            port: 53
          to:
          - namespaceSelector: {}
        - ports:
          - protocol: TCP
            port: 443
          to:
          - ipBlock:
              cidr: 0.0.0.0/0
      EOF
      
      echo "=== Predeploy completed successfully ==="
  executionMode:
    local:
      useLocalImages: true
profiles:
- name: preview-all