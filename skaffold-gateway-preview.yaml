apiVersion: skaffold/v4beta13
kind: Config
metadata:
  name: webapp-preview-deployment
build:
  artifacts:
  - image: europe-west1-docker.pkg.dev/u2i-tenant-webapp/webapp-images/webapp
    docker:
      dockerfile: Dockerfile
  googleCloudBuild:
    projectId: u2i-tenant-webapp
    region: europe-west1
  tagPolicy:
    sha256: {}
manifests:
  kustomize:
    paths:
    - k8s-clean/overlays/preview-gateway
    buildArgs:
    - --load-restrictor=LoadRestrictionsNone
deploy:
  kubectl:
    flags:
      apply: ["--wait=true"]
      global: ["--request-timeout=600s"]
  statusCheckDeadlineSeconds: 1200
customActions:
- name: create-preview-cert
  containers:
  - name: cert-creator
    image: google/cloud-sdk:alpine
    command: ["sh", "-c"]
    args:
    - |
      # Check if certificate already exists and is ACTIVE
      CERT_STATE=$(gcloud certificate-manager certificates describe ${CERT_NAME} \
        --project=u2i-tenant-webapp \
        --format="value(managed.state)" 2>/dev/null || echo "NOT_FOUND")
      
      if [ "$CERT_STATE" = "ACTIVE" ]; then
        echo "Certificate ${CERT_NAME} already exists and is ACTIVE"
      else
        if [ "$CERT_STATE" = "NOT_FOUND" ]; then
          echo "Creating certificate for ${DOMAIN}..."
          gcloud certificate-manager certificates create ${CERT_NAME} \
            --project=u2i-tenant-webapp \
            --description="${CERT_DESCRIPTION}" \
            --domains="${DOMAIN}" \
            --quiet
        else
          echo "Certificate exists but is in state: $CERT_STATE"
        fi
        
        echo "Waiting for certificate to become ACTIVE..."
        while true; do
          STATE=$(gcloud certificate-manager certificates describe ${CERT_NAME} \
            --project=u2i-tenant-webapp \
            --format="value(managed.state)")
          echo "Certificate state: $STATE"
          if [ "$STATE" = "ACTIVE" ]; then
            echo "Certificate is ACTIVE!"
            break
          fi
          sleep 10
        done
      fi
      
      # Check if map entry exists
      if gcloud certificate-manager maps entries describe ${CERT_ENTRY_NAME} \
          --map="webapp-cert-map" \
          --project=u2i-tenant-webapp >/dev/null 2>&1; then
        echo "Certificate map entry already exists"
      else
        echo "Creating certificate map entry..."
        gcloud certificate-manager maps entries create ${CERT_ENTRY_NAME} \
          --map="webapp-cert-map" \
          --project=u2i-tenant-webapp \
          --certificates=${CERT_NAME} \
          --hostname="${DOMAIN}" \
          --quiet
      fi
profiles:
# Single profile that creates cert via gcloud then deploys k8s resources
- name: preview-all
  manifests:
    kustomize:
      paths:
      # Deploy namespace, infra, and app - no Certificate CR
      - k8s-clean/overlays/preview-gateway-infra
      - k8s-clean/overlays/preview-gateway
      buildArgs:
      - --load-restrictor=LoadRestrictionsNone
  deploy:
    kubectl:
      flags:
        apply: ["--wait=true", "--server-side", "--timeout=600s"]
        global: ["--request-timeout=600s"]

# Legacy profiles kept for compatibility
- name: cert-only
  manifests:
    kustomize:
      paths:
      - k8s-clean/overlays/preview-gateway-cert
      buildArgs:
      - --load-restrictor=LoadRestrictionsNone
  deploy:
    kubectl:
      flags:
        apply: ["--wait=true"]
        global: ["--request-timeout=600s"]
  
- name: infra-only
  manifests:
    kustomize:
      paths:
      - k8s-clean/overlays/preview-gateway-infra
      buildArgs:
      - --load-restrictor=LoadRestrictionsNone
  deploy:
    kubectl:
      flags:
        apply: ["--wait=true"]
        global: ["--request-timeout=60s"]

- name: app-only
  manifests:
    kustomize:
      paths:
      - k8s-clean/overlays/preview-gateway
      buildArgs:
      - --load-restrictor=LoadRestrictionsNone
  deploy:
    kubectl:
      flags:
        apply: ["--wait=true"]
        global: ["--request-timeout=300s"]