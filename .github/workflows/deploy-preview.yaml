name: Deploy Preview

on:
  pull_request:
    types: [opened, synchronize, reopened]

env:
  GCP_PROJECT: u2i-tenant-webapp
  GCP_REGION: europe-west1
  PIPELINE: webapp-preview-pipeline

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
      pull-requests: write

    steps:
    - uses: actions/checkout@v4
    
    - uses: google-github-actions/auth@v2
      with:
        workload_identity_provider: ${{ secrets.WIF_PROVIDER }}
        service_account: ${{ secrets.WIF_SERVICE_ACCOUNT }}
    
    - uses: google-github-actions/setup-gcloud@v2
      with:
        install_components: 'gke-gcloud-auth-plugin'
    
    - name: Apply Cloud Deploy Configuration
      run: |
        gcloud deploy apply --file=clouddeploy-preview.yaml \
          --region=${{ env.GCP_REGION }} \
          --project=${{ env.GCP_PROJECT }}
    
    - name: Deploy Preview
      id: deploy
      run: |
        PR_NUMBER=${{ github.event.pull_request.number }}
        PREVIEW_NAME="pr-${PR_NUMBER}"
        DOMAIN="${PREVIEW_NAME}.webapp.u2i.dev"
        NAMESPACE="webapp-preview-${PREVIEW_NAME}"
        
        gcloud deploy releases create "${PREVIEW_NAME}-${GITHUB_SHA:0:7}" \
          --delivery-pipeline=${{ env.PIPELINE }} \
          --region=${{ env.GCP_REGION }} \
          --project=${{ env.GCP_PROJECT }} \
          --skaffold-file=skaffold-gateway-preview.yaml \
          --to-target=preview-gke \
          --deploy-parameters="DOMAIN=${DOMAIN},PREVIEW_NAME=${PREVIEW_NAME},NAMESPACE=${NAMESPACE},CERT_NAME=webapp-preview-cert-${PREVIEW_NAME},CERT_ENTRY_NAME=webapp-preview-entry-${PREVIEW_NAME},ROUTE_NAME=webapp-preview-route-${PREVIEW_NAME},CERT_DESCRIPTION=Certificate for ${DOMAIN},API_URL=https://api-${DOMAIN},ENV=preview,STAGE=preview,BOUNDARY=nonprod,TIER=preview,NAME_PREFIX=preview-,SERVICE_NAME=preview-webapp-service"
        
        echo "preview_url=https://${DOMAIN}" >> $GITHUB_OUTPUT
    
    - name: Comment on PR
      uses: actions/github-script@v7
      with:
        script: |
          const preview_url = '${{ steps.deploy.outputs.preview_url }}';
          const body = `ðŸš€ Preview deployment initiated!\n\nURL: ${preview_url}\n\n_Note: It may take a few minutes for HTTPS to be ready._`;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: body
          });

  cleanup:
    if: github.event.action == 'closed'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
    - uses: google-github-actions/auth@v2
      with:
        workload_identity_provider: ${{ secrets.WIF_PROVIDER }}
        service_account: ${{ secrets.WIF_SERVICE_ACCOUNT }}
    
    - uses: google-github-actions/setup-gcloud@v2
    
    - name: Setup kubectl
      run: |
        gcloud container clusters get-credentials webapp-cluster \
          --region=${{ env.GCP_REGION }} \
          --project=${{ env.GCP_PROJECT }}
    
    - name: Cleanup Preview
      run: |
        PR_NUMBER=${{ github.event.pull_request.number }}
        PREVIEW_NAME="pr-${PR_NUMBER}"
        NAMESPACE="webapp-preview-${PREVIEW_NAME}"
        
        echo "ðŸ§¹ Cleaning up preview environment for PR #${PR_NUMBER}"
        
        # Delete namespace (this will also delete the HTTPRoute)
        echo "Deleting namespace: ${NAMESPACE}"
        kubectl delete namespace ${NAMESPACE} --ignore-not-found=true || true
        
        # Delete certificate map entry
        ENTRY_NAME="webapp-preview-entry-${PREVIEW_NAME}"
        echo "Deleting certificate map entry: ${ENTRY_NAME}"
        gcloud certificate-manager maps entries delete ${ENTRY_NAME} \
          --map="webapp-cert-map" \
          --project=${{ env.GCP_PROJECT }} \
          --quiet || true
        
        # Delete certificate
        CERT_NAME="webapp-preview-cert-${PREVIEW_NAME}"
        echo "Deleting certificate: ${CERT_NAME}"
        gcloud certificate-manager certificates delete ${CERT_NAME} \
          --project=${{ env.GCP_PROJECT }} \
          --quiet || true
        
        echo "âœ… Preview cleanup completed"
    
    - name: Comment on PR
      uses: actions/github-script@v7
      with:
        script: |
          const body = `ðŸ§¹ Preview environment has been cleaned up.\n\nThe preview deployment for this PR has been removed.`;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: body
          });