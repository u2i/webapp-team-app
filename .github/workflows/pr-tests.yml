name: PR Tests

on:
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - '**.js'
      - 'package*.json'
      - 'Dockerfile'
      - '.github/workflows/pr-tests.yml'

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run tests with coverage
      run: npm run test:ci
      
    - name: Upload coverage reports
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: coverage-report
        path: coverage/

    - name: Comment test results on PR
      uses: actions/github-script@v7
      if: always()
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const fs = require('fs');
          const testResults = process.env.TEST_PASSED === 'true' ? '✅ All tests passed!' : '❌ Tests failed';
          
          await github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `## Test Results\n\n${testResults}\n\n[View workflow run](https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId})`
          });

  lint:
    name: Code Quality
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Check for security vulnerabilities
      run: npm audit --audit-level=high
      continue-on-error: true

  docker-build-test:
    name: Test Docker Build
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: false
        tags: webapp:pr-${{ github.event.pull_request.number }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Run container smoke test
      run: |
        docker run -d -p 8080:8080 --name webapp-test webapp:pr-${{ github.event.pull_request.number }}
        sleep 5
        curl -f http://localhost:8080/health || exit 1
        curl -f http://localhost:8080/ready || exit 1
        docker stop webapp-test

  compliance-check:
    name: Compliance Validation
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Check for hardcoded secrets
      run: |
        # Simple check for potential secrets
        if grep -r "password\|secret\|api[_-]key\|token" --include="*.js" --include="*.json" --exclude-dir=node_modules --exclude-dir=.git .; then
          echo "⚠️ Potential hardcoded secrets found. Please review."
          exit 1
        fi
        echo "✅ No hardcoded secrets detected"

    - name: Verify compliance tags
      run: |
        # Check package.json has compliance metadata
        if ! grep -q '"compliance":' package.json; then
          echo "❌ Missing compliance metadata in package.json"
          exit 1
        fi
        echo "✅ Compliance metadata present"

  # Required status check - must pass for PR to be mergeable
  required-checks:
    name: Required Checks
    runs-on: ubuntu-latest
    needs: [test, lint, docker-build-test, compliance-check]
    if: always()
    
    steps:
    - name: Check all required jobs passed
      run: |
        if [[ "${{ needs.test.result }}" != "success" ]]; then
          echo "❌ Tests failed"
          exit 1
        fi
        if [[ "${{ needs.docker-build-test.result }}" != "success" ]]; then
          echo "❌ Docker build failed"
          exit 1
        fi
        if [[ "${{ needs.compliance-check.result }}" != "success" ]]; then
          echo "❌ Compliance check failed"
          exit 1
        fi
        echo "✅ All required checks passed"