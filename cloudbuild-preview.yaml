# Tell Cloud Build which secrets to fetch
availableSecrets:
  secretManager:
  - versionName: projects/u2i-bootstrap/secrets/u2i-github-github-oauthtoken-3517b7/versions/latest
    env: GITHUB_TOKEN

steps:
# Extract PR number from the pull request
- name: 'gcr.io/cloud-builders/gcloud'
  id: 'get-pr-number'
  secretEnv: ['GITHUB_TOKEN']  # Mount the secret
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    # Debug current context
    echo "Current directory: $(pwd)"
    ls -la
    echo "Looking for scripts directory..."
    ls -la scripts/ || echo "Scripts directory not found"
    
    # Run the script
    bash scripts/get-pr-number.sh

# Build the Docker image
- name: 'gcr.io/cloud-builders/docker'
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    set -e  # Exit on error
    docker build \
      -t ${_REGION}-docker.pkg.dev/${_PROJECT_ID}/webapp-images/webapp:preview-$$COMMIT_SHA \
      -t ${_REGION}-docker.pkg.dev/${_PROJECT_ID}/webapp-images/webapp:preview-pr`cat /workspace/pr_number.txt` \
      .

# Push the Docker image
- name: 'gcr.io/cloud-builders/docker'
  args: ['push', '--all-tags', '${_REGION}-docker.pkg.dev/${_PROJECT_ID}/webapp-images/webapp']

# Deploy using Cloud Deploy
- name: 'google/cloud-sdk:alpine'
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    set -e  # Exit on error
    
    # Ensure we have a valid PR identifier
    if [ ! -f /workspace/pr_number.txt ]; then
      echo "ERROR: pr_number.txt not found!"
      echo "$$SHORT_SHA" > /workspace/pr_number.txt
    fi
    
    PR_ID=`cat /workspace/pr_number.txt`
    if [ -z "$PR_ID" ]; then
      echo "ERROR: PR ID is empty!"
      PR_ID="$$SHORT_SHA"
    fi
    
    echo "Using PR identifier: $PR_ID"
    
    gcloud deploy releases create "preview-pr$PR_ID-$$SHORT_SHA" \
      --delivery-pipeline=webapp-preview-pipeline \
      --region=${_REGION} \
      --project=${_PROJECT_ID} \
      --images="${_REGION}-docker.pkg.dev/${_PROJECT_ID}/webapp-images/webapp=${_REGION}-docker.pkg.dev/${_PROJECT_ID}/webapp-images/webapp:preview-$$COMMIT_SHA" \
      --to-target=preview-gke \
      --skaffold-file=skaffold-preview-deploy.yaml \
      --deploy-parameters="NAMESPACE=webapp-preview-pr`cat /workspace/pr_number.txt`,ENV=preview,API_URL=https://api-pr`cat /workspace/pr_number.txt`.webapp.u2i.dev,STAGE=preview,BOUNDARY=nonprod,TIER=preview,NAME_PREFIX=preview-,DOMAIN=pr`cat /workspace/pr_number.txt`.webapp.u2i.dev,ROUTE_NAME=webapp-preview-route-pr`cat /workspace/pr_number.txt`,SERVICE_NAME=webapp-service,CERT_NAME=webapp-preview-cert-pr`cat /workspace/pr_number.txt`,CERT_ENTRY_NAME=webapp-preview-entry-pr`cat /workspace/pr_number.txt`,CERT_DESCRIPTION=Certificate for pr`cat /workspace/pr_number.txt`.webapp.u2i.dev" \
      --impersonate-service-account=cloud-deploy-sa@${_PROJECT_ID}.iam.gserviceaccount.com
    
    echo "âœ… Preview deployment initiated: https://pr`cat /workspace/pr_number.txt`.webapp.u2i.dev"

# Post comment on PR
- name: 'google/cloud-sdk:alpine'
  secretEnv: ['GITHUB_TOKEN']  # Mount the secret
  entrypoint: 'bash'
  args: ['scripts/post-pr-comment.sh']

options:
  logging: CLOUD_LOGGING_ONLY
  dynamicSubstitutions: true
  
substitutions:
  _PROJECT_ID: u2i-tenant-webapp-nonprod
  _REGION: europe-west1