# Simplified Makefile using compliance-cli for all operations

# Use dockerized compliance-cli for consistency
COMPLIANCE_CLI_IMAGE = gcr.io/u2i-bootstrap/compliance-cli-builder:latest

# Wrapper for compliance-cli
ifdef BUILD_ID
  COMPLIANCE_CLI = compliance-cli
else
  COMPLIANCE_CLI = docker run --rm \
    -v $(PWD):/workspace \
    -w /workspace \
    -v $(HOME)/.config/gcloud:/root/.config/gcloud \
    $(COMPLIANCE_CLI_IMAGE) compliance-cli
endif

# Pipeline management
.PHONY: pipelines
pipelines:
	@$(COMPLIANCE_CLI) generate pipeline --all --write-dir=deploy/clouddeploy
	@$(COMPLIANCE_CLI) validate pipelines
	@$(COMPLIANCE_CLI) apply pipelines

# Status checks
.PHONY: status
status:
	@$(COMPLIANCE_CLI) status pipelines
	@$(COMPLIANCE_CLI) status environments

# Deployments
.PHONY: deploy-dev
deploy-dev:
	@$(COMPLIANCE_CLI) dev

.PHONY: deploy-qa
deploy-qa:
	@$(COMPLIANCE_CLI) qa

.PHONY: deploy-prod
deploy-prod:
	@$(COMPLIANCE_CLI) prod --release=$(RELEASE)

# Preview management
.PHONY: preview-cleanup
preview-cleanup:
	@$(COMPLIANCE_CLI) preview cleanup --days-old=7

# Help
.PHONY: help
help:
	@echo "Available targets:"
	@echo "  pipelines       - Generate, validate, and apply all pipelines"
	@echo "  status          - Check pipeline and environment status"
	@echo "  deploy-dev      - Deploy to development"
	@echo "  deploy-qa       - Deploy to QA"
	@echo "  deploy-prod     - Promote release to production"
	@echo "  preview-cleanup - Clean up old preview environments"
	@echo ""
	@echo "For more options, run: $(COMPLIANCE_CLI) --help"