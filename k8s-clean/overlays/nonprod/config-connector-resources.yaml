# Config Connector resources for non-prod
# These create the L4 TCP proxy load balancer with TLS termination

# Reserve static IP address
apiVersion: compute.cnrm.cloud.google.com/v1beta1
kind: ComputeAddress
metadata:
  name: webapp-dev-ip
  annotations:
    cnrm.cloud.google.com/project-id: u2i-tenant-webapp
spec:
  location: global
  addressType: EXTERNAL
  description: "Static IP for webapp dev environment"
---
# Service with NEG annotation for automatic endpoint management
apiVersion: v1
kind: Service  
metadata:
  name: webapp-service-neg
  annotations:
    cloud.google.com/neg: '{"exposed_ports":{"80":{"name":"webapp-neg-80"}}}'
spec:
  type: ClusterIP
  selector:
    app: webapp
  ports:
  - port: 80
    targetPort: 8080
    protocol: TCP
---
# Health Check for TCP
apiVersion: compute.cnrm.cloud.google.com/v1beta1
kind: ComputeHealthCheck
metadata:
  name: tcp-80-hc
  annotations:
    cnrm.cloud.google.com/project-id: u2i-tenant-webapp
spec:
  location: global
  checkIntervalSec: 10
  timeoutSec: 5
  healthyThreshold: 2
  unhealthyThreshold: 3
  tcpHealthCheck:
    port: 80
---
# Backend Service for TCP load balancing
apiVersion: compute.cnrm.cloud.google.com/v1beta1
kind: ComputeBackendService
metadata:
  name: webapp-tcp-bs
  annotations:
    cnrm.cloud.google.com/project-id: u2i-tenant-webapp
spec:
  location: global
  protocol: TCP
  loadBalancingScheme: EXTERNAL_MANAGED
  healthChecks:
  - healthCheckRef:
      name: tcp-80-hc
  connectionDrainingTimeoutSec: 30
  backends:
  - balancingMode: CONNECTION
    groupRef:
      # NEG created by the service annotation with explicit name
      external: projects/u2i-tenant-webapp/zones/europe-west1-b/networkEndpointGroups/webapp-neg-80
  - balancingMode: CONNECTION
    groupRef:
      external: projects/u2i-tenant-webapp/zones/europe-west1-c/networkEndpointGroups/webapp-neg-80
  - balancingMode: CONNECTION
    groupRef:
      external: projects/u2i-tenant-webapp/zones/europe-west1-d/networkEndpointGroups/webapp-neg-80
---
# Target TCP Proxy
apiVersion: compute.cnrm.cloud.google.com/v1beta1
kind: ComputeTargetTCPProxy
metadata:
  name: webapp-tcp-proxy
  annotations:
    cnrm.cloud.google.com/project-id: u2i-tenant-webapp
spec:
  backendServiceRef:
    name: webapp-tcp-bs
  proxyHeader: PROXY_V1
---
# Forwarding Rule - binds to static IP
apiVersion: compute.cnrm.cloud.google.com/v1beta1
kind: ComputeForwardingRule
metadata:
  name: webapp-tcp-fr
  annotations:
    cnrm.cloud.google.com/project-id: u2i-tenant-webapp
spec:
  location: global
  loadBalancingScheme: EXTERNAL_MANAGED
  ipProtocol: TCP
  portRange: "443"
  target:
    targetTCPProxyRef:
      name: webapp-tcp-proxy
  ipAddress:
    addressRef:
      name: webapp-dev-ip
---
# DNS Record - GitOps managed
apiVersion: dns.cnrm.cloud.google.com/v1beta1
kind: DNSRecordSet
metadata:
  name: dev-webapp-a
  annotations:
    cnrm.cloud.google.com/project-id: u2i-tenant-webapp
spec:
  name: "dev.webapp.u2i.dev."
  type: "A"
  ttl: 300
  managedZoneRef:
    external: webapp-zone
  rrdatasRefs:
  - name: webapp-dev-ip
    kind: ComputeAddress
