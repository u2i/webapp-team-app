# Dynamic Config Connector resources using Cloud Deploy parameters
# These use the # from-param: syntax for substitution

# Reserve static IP address
apiVersion: compute.cnrm.cloud.google.com/v1beta1
kind: ComputeAddress
metadata:
  name: webapp-ip # from-param: ${IP_NAME}
  labels:
    environment: env # from-param: ${ENVIRONMENT}
  annotations:
    cnrm.cloud.google.com/project-id: project-id # from-param: ${PROJECT_ID}
spec:
  location: global
  addressType: EXTERNAL
  description: "Static IP for webapp environment" # from-param: ${IP_DESCRIPTION}
---
# GKE ManagedCertificate
apiVersion: networking.gke.io/v1
kind: ManagedCertificate
metadata:
  name: webapp-cert # from-param: ${CERT_NAME}
  labels:
    environment: env # from-param: ${ENVIRONMENT}
spec:
  domains:
  - example.webapp.example.com # from-param: ${FULL_DOMAIN}
---
# Ingress
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: webapp-ingress-env # from-param: ${INGRESS_NAME}
  labels:
    environment: env # from-param: ${ENVIRONMENT}
  annotations:
    kubernetes.io/ingress.class: "gce"
    kubernetes.io/ingress.global-static-ip-name: "webapp-ip" # from-param: ${IP_NAME}
    networking.gke.io/managed-certificates: "webapp-cert" # from-param: ${CERT_NAME}
    kubernetes.io/ingress.allow-http: "true" # from-param: ${ALLOW_HTTP}
    external-dns.alpha.kubernetes.io/hostname: "example.webapp.example.com" # from-param: ${FULL_DOMAIN}
    external-dns.alpha.kubernetes.io/ttl: "300"
spec:
  defaultBackend:
    service:
      name: webapp-service
      port:
        number: 80