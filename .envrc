#!/usr/bin/env bash
# direnv configuration for webapp-team-app
# Provides convenient aliases for Docker-based development

# Default docker-compose service names
export DX_SERVICE=app
export DX_DB_SERVICE=postgres

# Set default environment for local development
export BUILD_TARGET=development
export NODE_ENV=development

# General-purpose helper to run commands in the app container
dx() {
  local CONTAINER
  CONTAINER=$(docker compose ps -q "$DX_SERVICE" 2>/dev/null || true)

  if [ -n "$CONTAINER" ] && [ "$(docker inspect -f '{{.State.Running}}' "$CONTAINER" 2>/dev/null || echo false)" = "true" ]; then
    docker exec -it "$CONTAINER" "$@"
  else
    docker compose --profile test run --rm "$DX_SERVICE" "$@"
  fi
}

# Database helper
dx_db() {
  local CONTAINER
  CONTAINER=$(docker compose ps -q "$DX_DB_SERVICE" 2>/dev/null || true)

  if [ -n "$CONTAINER" ] && [ "$(docker inspect -f '{{.State.Running}}' "$CONTAINER" 2>/dev/null || echo false)" = "true" ]; then
    docker exec -it "$CONTAINER" "$@"
  else
    docker compose --profile test run --rm "$DX_DB_SERVICE" "$@"
  fi
}

# Start services if not running
dx_start() {
  if [ -z "$(docker compose ps -q 2>/dev/null)" ]; then
    echo "🚀 Starting development environment..."
    docker compose --profile test up -d
    sleep 3
    echo "✅ Development environment ready!"
  fi
}

# Node/npm aliases
alias npm='dx npm'
alias npx='dx npx'
alias node='dx node'
alias jest='dx npx jest'

# Database aliases
alias psql='dx_db psql -U postgres -d webapp_test'
alias pg_dump='dx_db pg_dump -U postgres webapp_test'
alias migrate='dx npm run migrate'
alias migrate:test='dx npm run migrate:test'

# Testing aliases
alias test='dx npm test'
alias test:unit='dx npm run test:unit'
alias test:integration='dx npm run test:integration'
alias test:all='dx npm run test:all'
alias test:watch='dx npx jest --watch'

# Development shortcuts
alias dev='dx npm run dev'
alias start='dx npm start'
alias lint='dx npm run lint'
alias format='dx npm run format'
alias shell='dx sh'
alias bash='dx bash'

# Docker compose shortcuts
alias dc='docker compose'
alias dcup='docker compose --profile test up -d'
alias dcdown='docker compose --profile test down'
alias dclogs='docker compose logs -f'
alias dcps='docker compose ps'
alias dcrestart='docker compose --profile test restart'
alias dcrebuild='docker compose --profile test up -d --build'

# Helpful functions
run_tests() {
  echo "🧪 Running tests..."
  dx_start
  dx npm run migrate:test
  dx npm run test:integration
  dx npx jest app.test.js --coverage=false
}

clean_env() {
  echo "🧹 Cleaning up Docker environment..."
  docker compose --profile test down -v
  echo "✅ Environment cleaned!"
}

db_console() {
  echo "🗄️ Connecting to database..."
  dx_db psql -U postgres -d webapp_test
}

# Show available commands when entering directory
echo "🚀 webapp-team-app development environment loaded!"
echo ""
echo "Available commands:"
echo "  npm, npx, node     - Run Node.js commands in container"
echo "  test, test:unit    - Run tests"
echo "  test:integration   - Run integration tests"
echo "  migrate            - Run database migrations"
echo "  psql               - Connect to database"
echo "  shell              - Open shell in app container"
echo "  dcup               - Start Docker environment"
echo "  dcdown             - Stop Docker environment"
echo "  run_tests()        - Run full test suite"
echo "  clean_env()        - Clean up everything"
echo "  db_console()       - Open database console"
echo ""
echo "All commands run inside Docker containers automatically!"