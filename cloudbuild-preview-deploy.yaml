steps:
# Step 1: Create namespace first (from certificate resources)
- name: 'gcr.io/cloud-builders/kubectl'
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    echo "=== Starting deployment for certificate provisioning ==="
    echo "1. Creating namespace..."
    kubectl apply -f rendered.yaml \
      --selector=app.kubernetes.io/component=certificate,kind=Namespace \
      --server-side
  env:
  - 'CLOUDSDK_COMPUTE_REGION=europe-west1'
  - 'CLOUDSDK_CONTAINER_CLUSTER=webapp-cluster'

# Step 2: Apply certificate resources
- name: 'gcr.io/cloud-builders/kubectl'
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    echo "2. Applying certificate resources..."
    kubectl apply -f rendered.yaml \
      --selector=app.kubernetes.io/component=certificate \
      --wait=true --server-side --timeout=600s
  env:
  - 'CLOUDSDK_COMPUTE_REGION=europe-west1'
  - 'CLOUDSDK_CONTAINER_CLUSTER=webapp-cluster'

# Step 3: Wait for certificate to be ACTIVE
- name: 'gcr.io/cloud-builders/kubectl'
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    echo "3. Waiting for certificate to become ACTIVE..."
    kubectl wait \
      --for=jsonpath='{.status.state}'=ACTIVE \
      --timeout=10m \
      -n ${_NAMESPACE} \
      certificatemanagercertificates/${_CERT_NAME}
    echo "Certificate is ACTIVE!"
  env:
  - 'CLOUDSDK_COMPUTE_REGION=europe-west1'
  - 'CLOUDSDK_CONTAINER_CLUSTER=webapp-cluster'

# Step 4: Apply infrastructure resources
- name: 'gcr.io/cloud-builders/kubectl'
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    echo "4. Applying infrastructure resources..."
    kubectl apply -f rendered.yaml \
      --selector=app.kubernetes.io/component=infrastructure \
      --wait=true --server-side --timeout=300s
  env:
  - 'CLOUDSDK_COMPUTE_REGION=europe-west1'
  - 'CLOUDSDK_CONTAINER_CLUSTER=webapp-cluster'

# Step 5: Apply application resources
- name: 'gcr.io/cloud-builders/kubectl'
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    echo "5. Applying application deployment..."
    kubectl apply -f rendered.yaml \
      --selector=app.kubernetes.io/component=application \
      --wait=true --server-side --timeout=600s
    echo "=== Deployment completed successfully ==="
  env:
  - 'CLOUDSDK_COMPUTE_REGION=europe-west1'
  - 'CLOUDSDK_CONTAINER_CLUSTER=webapp-cluster'

substitutions:
  _NAMESPACE: '${NAMESPACE}'
  _CERT_NAME: '${CERT_NAME}'

options:
  substitution_option: 'ALLOW_LOOSE'