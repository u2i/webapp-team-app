apiVersion: networking.gke.io/v1
kind: ManagedCertificate
metadata:
  name: webapp-cert
  namespace: webapp-team
  labels:
    app: webapp
    tenant: webapp-team
    compliance: iso27001-soc2-gdpr
    data-residency: eu
spec:
  domains:
    - webapp.u2i.dev
    - dev.webapp.u2i.dev
    - www.webapp.u2i.dev
    - staging.webapp.u2i.dev
    - qa.webapp.u2i.dev
    - pre-prod.webapp.u2i.dev
    - prod.webapp.u2i.dev
---
apiVersion: v1
kind: Service
metadata:
  name: webapp-nodeport
  namespace: webapp-team
  labels:
    app: webapp
    tenant: webapp-team
    compliance: iso27001-soc2-gdpr
    data-residency: eu
spec:
  type: NodePort
  selector:
    app: webapp
  ports:
    - port: 80
      targetPort: 8080
      protocol: TCP
      name: http
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: webapp-ingress
  namespace: webapp-team
  labels:
    app: webapp
    tenant: webapp-team
    compliance: iso27001-soc2-gdpr
    data-residency: eu
  annotations:
    # Use GCE ingress controller
    # kubernetes.io/ingress.class is deprecated, using spec.ingressClassName instead
    networking.gke.io/managed-certificates: "webapp-cert"
    kubernetes.io/ingress.allow-http: "true"
    # For external-dns if installed
    external-dns.alpha.kubernetes.io/hostname: "webapp.u2i.dev,dev.webapp.u2i.dev,www.webapp.u2i.dev"
spec:
  ingressClassName: "gce"
  rules:
    - host: webapp.u2i.dev
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: webapp-nodeport
                port:
                  number: 80
    - host: dev.webapp.u2i.dev
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: webapp-nodeport
                port:
                  number: 80
    - host: www.webapp.u2i.dev
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: webapp-nodeport
                port:
                  number: 80
    - host: staging.webapp.u2i.dev
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: webapp-nodeport
                port:
                  number: 80
    - host: qa.webapp.u2i.dev
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: webapp-nodeport
                port:
                  number: 80
    - host: pre-prod.webapp.u2i.dev
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: webapp-nodeport
                port:
                  number: 80
    - host: prod.webapp.u2i.dev
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: webapp-nodeport
                port:
                  number: 80
---
# NetworkPolicy to allow ingress traffic from GCE Load Balancer
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: webapp-ingress-allow
  namespace: webapp-team
spec:
  podSelector:
    matchLabels:
      app: webapp
  policyTypes:
  - Ingress
  ingress:
  - from:
    # Allow traffic from GCE health checks and load balancer
    - ipBlock:
        cidr: 130.211.0.0/22
    - ipBlock:
        cidr: 35.191.0.0/16
    - ipBlock:
        cidr: 209.85.152.0/22
    - ipBlock:
        cidr: 209.85.204.0/22
    ports:
    - protocol: TCP
      port: 8080