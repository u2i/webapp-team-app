# Compliance CLI configuration for webapp-team-app
# All fields are required

# Application identifier
app: webapp

# Compliance CLI version for Cloud Build
compliance_cli_version: v0.9.1

# GCP projects
projects:
  nonprod: u2i-tenant-webapp-nonprod
  prod: u2i-tenant-webapp-prod

# Domain configuration  
domains:
  nonprod_base: u2i.dev
  prod_base: u2i.com

# Test configuration
tests:
  # Enable or disable test execution in pipelines
  enabled: true
  
  # Docker image to use for running tests
  runner_image: node:22-alpine
  
  # Commands to execute for testing
  commands:
    install: npm ci
    test: npm run test:ci
    
  # Success message to display after tests pass
  success_message: "Tests passed successfully!"
  
  # Whether to fail the build if tests fail
  fail_on_error: true

# Static Analysis configuration
analysis:
  enabled: true
  runner_image: node:22-alpine
  commands:
    install: npm ci
    analyze: npm audit --audit-level=high && npx eslint . --ext .js,.jsx,.ts,.tsx --max-warnings 0 || true
  success_message: "Static analysis completed!"
  fail_on_error: false  # Set to true to block on security issues

# Lint configuration
lint:
  enabled: true
  runner_image: node:22-alpine
  commands:
    install: npm ci
    lint: npx eslint . --ext .js,.jsx,.ts,.tsx
  success_message: "Linting passed!"
  fail_on_error: true

# Format configuration  
format:
  enabled: true
  runner_image: node:22-alpine
  commands:
    install: npm ci
    check: npx prettier --check "**/*.{js,jsx,ts,tsx,json,css,md}"
  success_message: "Code formatting verified!"
  fail_on_error: false  # Usually just a warning

# Neon Database configuration for preview environments
neon:
  # Enable Neon database for preview environments
  enabled: true  # Neon projects are now configured
  
  # Neon project IDs for each boundary
  projects:
    nonprod: "withered-leaf-60283890"  # Neon nonprod project ID
    prod: "divine-union-66509090"     # Neon prod project ID
  
  # Database configuration
  database:
    # Parent branch to create preview branches from
    parent_branch: main
    
    # Compute configuration for preview databases
    min_compute_units: 0.25
    max_compute_units: 1.0
    
    # Suspend timeout for preview databases (in seconds)
    suspend_timeout: 300  # 5 minutes
  
  # Script location for database management
  manager_script: /workspace/u2i-infrastructure/scripts/neon-preview-manager.py

# Workload Identity configuration for preview environments
workload_identity:
  # Enable workload identity setup for preview environments
  enabled: true
  
  # Service account to bind workload identity to
  service_account: "webapp-k8s@u2i-tenant-webapp-nonprod.iam.gserviceaccount.com"
  
  # IAM role to assign
  role: "roles/iam.workloadIdentityUser"
  
  # Secrets that the service account needs access to
  secrets:
    - name: "webapp-demo-secret"
      role: "roles/secretmanager.secretAccessor"

# Validation configuration for PR checks
validation:
  # Enable comprehensive validation checks
  enabled: true
  
  # Docker build validation
  docker_build:
    enabled: true
    test_target: test  # Docker target stage for test builds
    fail_on_error: true
  
  # Security checks configuration
  security:
    enabled: true
    runner_image: node:22-alpine
    checks:
      # Check for hardcoded secrets
      secrets:
        enabled: true
        exclude_patterns:
          - "SecretManager"
          - "secretManager"
          - "secretClient"
          - "process.env"
          - "DATABASE_PASSWORD"
          - "require.*secret-manager"
          - ".test.js:"
          - "package.*\\.json:"
        fail_on_detection: true
      
      # Dependency audit
      dependency_audit:
        enabled: true
        audit_level: high
        fail_on_vulnerability: false  # Warning only
    
    success_message: "Security checks completed!"
  
  # Compliance checks
  compliance:
    enabled: true
    runner_image: node:22-alpine
    checks:
      # Check for compliance metadata
      metadata:
        enabled: true
        required_fields:
          - compliance
        fail_on_missing: true
      
      # ISO/SOC2/GDPR flags
      flags:
        iso27001: true
        soc2_type2: true
        gdpr: true
        warn_if_missing: true  # Just warn, don't fail
    
    success_message: "Compliance validation passed!"
  
  # Container smoke test
  container_test:
    enabled: true
    ports:
      app: 8080
      health: 8080
    endpoints:
      - path: /health
        expected_status: 200
      - path: /ready
        expected_status: 200
    startup_delay: 5  # seconds
    fail_on_error: true
    success_message: "Container smoke test passed!"